/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import model.Doctor;
import model.InsuranceDetails;
import model.Patient;
import model.Person;
import model.VehicleRegistration;
import model.Address;
import model.Driver;

/**
 *
 * @author tanujamahajan
 */

public class DisplayPatientReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DisplayPatientReportJPanel
     */
    Patient patient;
    Doctor doctor;
    InsuranceDetails insurance;
    Person person;
    VehicleRegistration vehicle;
    Address address;
    Driver driver;
    
    public DisplayPatientReportJPanel(Patient patient, Doctor doctor, InsuranceDetails insurance, Person person, VehicleRegistration vehicle, Address address, Driver driver) {
        initComponents();
        
        this.patient = patient;
        displayPatient(); 
        
        this.doctor = doctor;
        displayDoctor();
        
        this.insurance = insurance;
        displayInsuranceDetails();
        
        this.person = person;
        displayPersonalDetails();
        
        this.vehicle = vehicle;
        displayVehicleRegistrationDetails();
        
        this.address = address;
        displayAddressDetails();
        
        this.driver = driver;
        displayDriverDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPatientID = new javax.swing.JLabel();
        lblPrimaryDoctor = new javax.swing.JLabel();
        lblDateOfLastVisitToDoctor = new javax.swing.JLabel();
        lblDateOfNextAppointment = new javax.swing.JLabel();
        lblAllergies = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        txtPrimaryDoctor = new javax.swing.JTextField();
        txtDateOfNextAppointment = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDoctorID = new javax.swing.JLabel();
        lblEducation = new javax.swing.JLabel();
        lblSpeciality = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtDoctorID = new javax.swing.JTextField();
        txtEducation = new javax.swing.JTextField();
        txtSpeciality = new javax.swing.JTextField();
        txtAllergies = new javax.swing.JTextField();
        lblOfficeHours = new javax.swing.JLabel();
        lblOfficeAddress = new javax.swing.JLabel();
        txtOfficeHours = new javax.swing.JTextField();
        txtOfficeAddress = new javax.swing.JTextField();
        lblInsuranceCovered = new javax.swing.JLabel();
        txtInsuranceCovered = new javax.swing.JTextField();
        txtPatientID1 = new javax.swing.JTextField();
        lblSOB = new javax.swing.JLabel();
        txtCorporateID = new javax.swing.JTextField();
        txtHealthInsuranceDetails = new javax.swing.JTextField();
        txtPremium = new javax.swing.JTextField();
        lblInsuranceDetails = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblHealthInsuranceCompanyName = new javax.swing.JLabel();
        txtDeductible = new javax.swing.JTextField();
        lblCorporateID = new javax.swing.JLabel();
        txtSOB = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        lblPremium = new javax.swing.JLabel();
        lblDeductible = new javax.swing.JLabel();
        lblTitle2 = new javax.swing.JLabel();
        lblPhoneNo = new javax.swing.JLabel();
        txtWebsiteURL = new javax.swing.JTextField();
        lblName1 = new javax.swing.JLabel();
        txtPhoneNo = new javax.swing.JTextField();
        lblDOB = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblNationality = new javax.swing.JLabel();
        lblEmailID = new javax.swing.JLabel();
        lblSSN = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        txtSSN = new javax.swing.JTextField();
        txtNationality = new javax.swing.JTextField();
        txtEmailID = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        txtAddress1 = new javax.swing.JTextField();
        lblWebsiteURL = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        txtType = new javax.swing.JTextField();
        lblVehicleMakeandModel1 = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        lblVehicleRegistration = new javax.swing.JLabel();
        txtYearofManufacture = new javax.swing.JTextField();
        lblVIN = new javax.swing.JLabel();
        txtMake = new javax.swing.JTextField();
        lblLicensePlateNumber = new javax.swing.JLabel();
        lblVehicleMakeandModel = new javax.swing.JLabel();
        lblVehicleType = new javax.swing.JLabel();
        lblYearofManufacture = new javax.swing.JLabel();
        txtVIN = new javax.swing.JTextField();
        txtLicensePlateNumber = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        lblDriver = new javax.swing.JLabel();
        lblDriverLicenseNumber = new javax.swing.JLabel();
        txtDriverLicenseNumber = new javax.swing.JTextField();
        txtDOB = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 255)));

        lblPatientID.setText("Patient ID:");
        lblPatientID.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        lblPrimaryDoctor.setText("PrimaryDoctor:");
        lblPrimaryDoctor.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        lblDateOfLastVisitToDoctor.setText("Date Of Last Visit To Doctor:");
        lblDateOfLastVisitToDoctor.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        lblDateOfNextAppointment.setText("Date Of Next Appointment:");
        lblDateOfNextAppointment.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        lblAllergies.setText("Allergies:");
        lblAllergies.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        txtPatientID.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        txtPatientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIDActionPerformed(evt);
            }
        });

        txtPrimaryDoctor.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        txtPrimaryDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrimaryDoctorActionPerformed(evt);
            }
        });

        txtDateOfNextAppointment.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        txtDateOfNextAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateOfNextAppointmentActionPerformed(evt);
            }
        });

        lblTitle.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Patient Details");
        lblTitle.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), new java.awt.Color(204, 153, 255)));
        lblTitle.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        lblTitle1.setBackground(new java.awt.Color(153, 255, 153));
        lblTitle1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Doctor Details");
        lblTitle1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), new java.awt.Color(204, 102, 255)));

        lblName.setText("Name:");

        lblDoctorID.setText("Doctor ID:");

        lblEducation.setText("Education:");

        lblSpeciality.setText("Speciality:");

        txtSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpecialityActionPerformed(evt);
            }
        });

        txtAllergies.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        txtAllergies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAllergiesActionPerformed(evt);
            }
        });

        lblOfficeHours.setText("Office Hours:");

        lblOfficeAddress.setText("Office Address:");

        txtOfficeAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOfficeAddressActionPerformed(evt);
            }
        });

        lblInsuranceCovered.setText("Insurance Covered:");

        txtPatientID1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        txtPatientID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientID1ActionPerformed(evt);
            }
        });

        lblSOB.setText("Statement of Benefits:");

        txtCorporateID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorporateIDActionPerformed(evt);
            }
        });
        txtCorporateID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorporateIDKeyPressed(evt);
            }
        });

        txtHealthInsuranceDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHealthInsuranceDetailsActionPerformed(evt);
            }
        });
        txtHealthInsuranceDetails.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHealthInsuranceDetailsKeyPressed(evt);
            }
        });

        txtPremium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPremiumActionPerformed(evt);
            }
        });
        txtPremium.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPremiumKeyPressed(evt);
            }
        });

        lblInsuranceDetails.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblInsuranceDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInsuranceDetails.setText("Health Insurance Details");
        lblInsuranceDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), null));

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        lblHealthInsuranceCompanyName.setText("Health Insurance Company Name:");

        txtDeductible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeductibleActionPerformed(evt);
            }
        });
        txtDeductible.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDeductibleKeyPressed(evt);
            }
        });

        lblCorporateID.setText("Corporate ID: ");

        txtSOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSOBActionPerformed(evt);
            }
        });

        lblAddress.setText("Address:");

        lblPremium.setText("Premium:");

        lblDeductible.setText("Dedutible:");

        lblTitle2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("Personal Details");
        lblTitle2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), new java.awt.Color(204, 102, 255)));

        lblPhoneNo.setText("Phone No:");

        lblName1.setText("Name:");

        txtPhoneNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNoActionPerformed(evt);
            }
        });
        txtPhoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneNoKeyPressed(evt);
            }
        });

        lblDOB.setText("Date of Birth:");

        lblGender.setText("Gender:");

        lblNationality.setText("Nationality:");

        lblEmailID.setText("Email ID:");

        lblSSN.setText("SSN:");

        txtName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName1ActionPerformed(evt);
            }
        });
        txtName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtName1KeyPressed(evt);
            }
        });

        txtSSN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSSNKeyPressed(evt);
            }
        });

        txtNationality.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNationalityKeyPressed(evt);
            }
        });

        lblAddress1.setText("Address:");

        txtAddress1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddress1KeyPressed(evt);
            }
        });

        lblWebsiteURL.setText("Website URL");

        txtType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTypeKeyPressed(evt);
            }
        });

        lblVehicleMakeandModel1.setText("Vehicle Model:");

        txtModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtModelKeyPressed(evt);
            }
        });

        lblVehicleRegistration.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblVehicleRegistration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVehicleRegistration.setText("Vehicle Registration Details");
        lblVehicleRegistration.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), new java.awt.Color(204, 102, 255)));

        txtYearofManufacture.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtYearofManufactureKeyPressed(evt);
            }
        });

        lblVIN.setText("VIN:");

        txtMake.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMakeKeyPressed(evt);
            }
        });

        lblLicensePlateNumber.setText("License Plate Number");

        lblVehicleMakeandModel.setText("Vehicle Make:");

        lblVehicleType.setText("Vehicle Type:");

        lblYearofManufacture.setText("Year of Manufacture:");

        txtVIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVINKeyPressed(evt);
            }
        });

        txtLicensePlateNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLicensePlateNumberKeyPressed(evt);
            }
        });

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });

        txtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStateKeyPressed(evt);
            }
        });

        txtCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCountryKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Address Details");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), new java.awt.Color(204, 102, 255)));

        lblCity.setText("City:");

        lblState.setText("State:");

        lblCountry.setText("Country:");

        lblDriver.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblDriver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDriver.setText("Driver Details");
        lblDriver.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 51, 255), new java.awt.Color(204, 102, 255)));

        lblDriverLicenseNumber.setText("Driver License Number:");

        txtDriverLicenseNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDriverLicenseNumberActionPerformed(evt);
            }
        });
        txtDriverLicenseNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDriverLicenseNumberKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDOB)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblEmailID)
                                            .addComponent(lblNationality)
                                            .addComponent(lblName1)
                                            .addComponent(lblAddress1)
                                            .addComponent(lblPhoneNo)
                                            .addComponent(lblGender)
                                            .addComponent(lblSSN))))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNationality, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                    .addComponent(txtEmailID)
                                    .addComponent(txtAddress1)
                                    .addComponent(txtPhoneNo)
                                    .addComponent(txtSSN)
                                    .addComponent(txtName1)
                                    .addComponent(txtGender)
                                    .addComponent(txtDOB)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblDateOfLastVisitToDoctor)
                                        .addComponent(lblPatientID)
                                        .addComponent(lblPrimaryDoctor))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblDateOfNextAppointment))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addComponent(lblAllergies)))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPatientID)
                                    .addComponent(txtPrimaryDoctor)
                                    .addComponent(txtPatientID1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                    .addComponent(txtDateOfNextAppointment)
                                    .addComponent(txtAllergies)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblWebsiteURL)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtWebsiteURL, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(117, 117, 117)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(398, 398, 398)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblPremium)
                                        .addComponent(lblAddress)
                                        .addComponent(lblHealthInsuranceCompanyName)
                                        .addComponent(lblCorporateID))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblDeductible)
                                            .addComponent(lblSOB))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCorporateID)
                                    .addComponent(txtHealthInsuranceDetails)
                                    .addComponent(txtPremium)
                                    .addComponent(txtAddress)
                                    .addComponent(txtDeductible)
                                    .addComponent(txtSOB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSpeciality)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblEducation)
                                                .addComponent(lblDoctorID))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtDoctorID)
                                                .addComponent(txtEducation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(21, 21, 21)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(lblName)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(txtName)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblOfficeHours)
                                                    .addComponent(lblOfficeAddress))
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblInsuranceCovered)
                                                .addGap(16, 16, 16)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtInsuranceCovered)
                                            .addComponent(txtOfficeAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtOfficeHours, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDriverLicenseNumber)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblVehicleMakeandModel)
                                            .addComponent(lblVIN)
                                            .addComponent(lblLicensePlateNumber)
                                            .addComponent(lblVehicleType)
                                            .addComponent(lblYearofManufacture)
                                            .addComponent(lblVehicleMakeandModel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtVIN)
                                            .addComponent(txtLicensePlateNumber)
                                            .addComponent(txtYearofManufacture)
                                            .addComponent(txtMake, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtType)
                                            .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(457, 457, 457)
                                .addComponent(lblInsuranceDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(lblVehicleRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCountry)
                                    .addComponent(lblState)
                                    .addComponent(lblCity))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtState)
                                    .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                    .addComponent(txtCountry)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(txtDriverLicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(lblDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblInsuranceDetails)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtHealthInsuranceDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHealthInsuranceCompanyName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCorporateID)
                            .addComponent(txtCorporateID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPremium)
                            .addComponent(txtPremium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDeductible)
                            .addComponent(txtDeductible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSOB)
                            .addComponent(txtSOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDoctorID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEducation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEducation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSpeciality))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInsuranceCovered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsuranceCovered))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOfficeHours)
                            .addComponent(txtOfficeHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOfficeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOfficeAddress)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblPatientID)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrimaryDoctor)
                            .addComponent(txtPrimaryDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDateOfLastVisitToDoctor)
                            .addComponent(txtPatientID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateOfNextAppointment)
                            .addComponent(txtDateOfNextAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAllergies)
                            .addComponent(txtAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblVehicleRegistration))
                    .addComponent(lblTitle2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblName1)
                                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDOB)
                                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNationality)
                                    .addComponent(txtNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEmailID)
                                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddress1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPhoneNo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblGender)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSSN)
                                    .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblWebsiteURL)
                                    .addComponent(txtWebsiteURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtVIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVIN))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLicensePlateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLicensePlateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVehicleMakeandModel))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVehicleMakeandModel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVehicleType))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtYearofManufacture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblYearofManufacture))))
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblDriver)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDriverLicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDriverLicenseNumber))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCountry)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientIDActionPerformed

    private void txtPrimaryDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrimaryDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrimaryDoctorActionPerformed

    private void txtDateOfNextAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateOfNextAppointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateOfNextAppointmentActionPerformed

    private void txtSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpecialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpecialityActionPerformed

    private void txtAllergiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAllergiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAllergiesActionPerformed

    private void txtOfficeAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOfficeAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOfficeAddressActionPerformed

    private void txtPatientID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientID1ActionPerformed

    private void txtCorporateIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorporateIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorporateIDActionPerformed

    private void txtCorporateIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorporateIDKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyChar()>='0' && evt.getKeyChar()<='9'))
        {
            txtCorporateID.setEditable(true);
        }
        else
        {
            txtCorporateID.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Corporate ID");

        }
    }//GEN-LAST:event_txtCorporateIDKeyPressed

    private void txtHealthInsuranceDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHealthInsuranceDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHealthInsuranceDetailsActionPerformed

    private void txtHealthInsuranceDetailsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHealthInsuranceDetailsKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyChar()>='0' && evt.getKeyChar()<='9'))
        {
            txtHealthInsuranceDetails.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Health Insurance Company Name");
        }
        else
        {
            txtHealthInsuranceDetails.setEditable(true);

        }
    }//GEN-LAST:event_txtHealthInsuranceDetailsKeyPressed

    private void txtPremiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPremiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPremiumActionPerformed

    private void txtPremiumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPremiumKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyChar()>='0' && evt.getKeyChar()<='9'))
        {
            txtPremium.setEditable(true);
        }
        else
        {
            txtPremium.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Premium");

        }
    }//GEN-LAST:event_txtPremiumKeyPressed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtDeductibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeductibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeductibleActionPerformed

    private void txtDeductibleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDeductibleKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyChar()>='0' && evt.getKeyChar()<='9'))
        {
            txtDeductible.setEditable(true);
        }
        else
        {
            txtDeductible.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Deductible");

        }
    }//GEN-LAST:event_txtDeductibleKeyPressed

    private void txtSOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSOBActionPerformed

    private void txtPhoneNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtPhoneNoActionPerformed

    private void txtPhoneNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNoKeyPressed
        // TODO add your handling code here:
        String phone_number = txtPhoneNo.getText();
        int length = phone_number.length();
        char ch = evt.getKeyChar();

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            if(length<10)
            {
                txtPhoneNo.setEditable(true);
            }
            else
            {
                txtPhoneNo.setEditable(false);
                JOptionPane.showMessageDialog(this, "Enter a valid Phone Number");
            }
        }
        else
        {
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
            {
                txtPhoneNo.setEditable(true);
            }
            else
            {
                txtPhoneNo.setEditable(false);
                JOptionPane.showMessageDialog(this, "Enter a valid Phone Number");
            }
        }
    }//GEN-LAST:event_txtPhoneNoKeyPressed

    private void txtName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtName1ActionPerformed

    private void txtName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtName1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtName.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Name");
        }
        else
        {
            txtName.setEditable(true);
        }
    }//GEN-LAST:event_txtName1KeyPressed

    private void txtSSNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSSNKeyPressed
        // TODO add your handling code here:
        String ssn = txtSSN.getText();
        int length = ssn.length();
        char ch = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            if(length<9)
            {
                txtSSN.setEditable(true);
            }
            else
            {
                txtSSN.setEditable(false);
                JOptionPane.showMessageDialog(this, "Enter a valid SSN");
            }
        }
        else
        {
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
            {
                txtSSN.setEditable(true);
            }
            else
            {
                txtSSN.setEditable(false);
                JOptionPane.showMessageDialog(this, "Enter a valid SSN");
            }
        }
    }//GEN-LAST:event_txtSSNKeyPressed

    private void txtNationalityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNationalityKeyPressed
        // TODO add your handling code here:

        char name = evt.getKeyChar();
        if(Character.isDigit(name) || Character.isSpaceChar(name) )
        {
            txtNationality.setEditable(false);
            JOptionPane.showMessageDialog(this, "Please Enter Valid Characters.");
        }
        else
        {
            txtNationality.setEditable(true);
        }
    }//GEN-LAST:event_txtNationalityKeyPressed

    private void txtAddress1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddress1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddress1KeyPressed

    private void txtTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTypeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtType.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Vehicle Type");
        }
        else
        {
            txtType.setEditable(true);
        }
    }//GEN-LAST:event_txtTypeKeyPressed

    private void txtModelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtModel.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Vehicle Model");
        }
        else
        {
            txtModel.setEditable(true);
        }
    }//GEN-LAST:event_txtModelKeyPressed

    private void txtYearofManufactureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearofManufactureKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtType.setEditable(true);
        }
        else
        {
            txtType.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a year of manufacture");
        }
    }//GEN-LAST:event_txtYearofManufactureKeyPressed

    private void txtMakeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMakeKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtMake.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Vehicle Make");
        }
        else
        {
            txtMake.setEditable(true);
        }
    }//GEN-LAST:event_txtMakeKeyPressed

    private void txtVINKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVINKeyPressed
        // TODO add your handling code here:
        char name = evt.getKeyChar();
        if(Character.isDigit(name) || Character.isAlphabetic(name) )
        {
            txtVIN.setEditable(true);
        }
        else
        {
            txtVIN.setEditable(true);
            JOptionPane.showMessageDialog(this, "Please Enter Valid VIN.");
        }
    }//GEN-LAST:event_txtVINKeyPressed

    private void txtLicensePlateNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLicensePlateNumberKeyPressed
        // TODO add your handling code here:
        char name = evt.getKeyChar();
        if(Character.isDigit(name) || Character.isAlphabetic(name) )
        {
            txtLicensePlateNumber.setEditable(true);
        }
        else
        {
            txtLicensePlateNumber.setEditable(true);
            JOptionPane.showMessageDialog(this, "Please Enter Valid License Plate Number.");
        }
    }//GEN-LAST:event_txtLicensePlateNumberKeyPressed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtCity.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid City");
        }
        else
        {
            txtCity.setEditable(true);
        }
    }//GEN-LAST:event_txtCityKeyPressed

    private void txtStateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStateKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtState.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid State");
        }
        else
        {
            txtState.setEditable(true);
        }
    }//GEN-LAST:event_txtStateKeyPressed

    private void txtCountryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCountryKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
            txtCountry.setEditable(false);
            JOptionPane.showMessageDialog(this, "Enter a valid Country");
        }
        else
        {
            txtCountry.setEditable(true);
        }
    }//GEN-LAST:event_txtCountryKeyPressed

    private void txtDriverLicenseNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDriverLicenseNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDriverLicenseNumberActionPerformed

    private void txtDriverLicenseNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDriverLicenseNumberKeyPressed
        // TODO add your handling code here:

        char driverlicensenumber = evt.getKeyChar();
        if(Character.isLetter(driverlicensenumber) || Character.isDigit(driverlicensenumber) )
        {
            txtDriverLicenseNumber.setEditable(true);
        }
        else
        {
            txtDriverLicenseNumber.setEditable(false);
            JOptionPane.showMessageDialog(this, "Please Enter Valid Driver License Number.");
        }
    }//GEN-LAST:event_txtDriverLicenseNumberKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAllergies;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCorporateID;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDateOfLastVisitToDoctor;
    private javax.swing.JLabel lblDateOfNextAppointment;
    private javax.swing.JLabel lblDeductible;
    private javax.swing.JLabel lblDoctorID;
    private javax.swing.JLabel lblDriver;
    private javax.swing.JLabel lblDriverLicenseNumber;
    private javax.swing.JLabel lblEducation;
    private javax.swing.JLabel lblEmailID;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHealthInsuranceCompanyName;
    private javax.swing.JLabel lblInsuranceCovered;
    private javax.swing.JLabel lblInsuranceDetails;
    private javax.swing.JLabel lblLicensePlateNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblNationality;
    private javax.swing.JLabel lblOfficeAddress;
    private javax.swing.JLabel lblOfficeHours;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPremium;
    private javax.swing.JLabel lblPrimaryDoctor;
    private javax.swing.JLabel lblSOB;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblVIN;
    private javax.swing.JLabel lblVehicleMakeandModel;
    private javax.swing.JLabel lblVehicleMakeandModel1;
    private javax.swing.JLabel lblVehicleRegistration;
    private javax.swing.JLabel lblVehicleType;
    private javax.swing.JLabel lblWebsiteURL;
    private javax.swing.JLabel lblYearofManufacture;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAllergies;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCorporateID;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtDateOfNextAppointment;
    private javax.swing.JTextField txtDeductible;
    private javax.swing.JTextField txtDoctorID;
    private javax.swing.JTextField txtDriverLicenseNumber;
    private javax.swing.JTextField txtEducation;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHealthInsuranceDetails;
    private javax.swing.JTextField txtInsuranceCovered;
    private javax.swing.JTextField txtLicensePlateNumber;
    private javax.swing.JTextField txtMake;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtNationality;
    private javax.swing.JTextField txtOfficeAddress;
    private javax.swing.JTextField txtOfficeHours;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientID1;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPremium;
    private javax.swing.JTextField txtPrimaryDoctor;
    private javax.swing.JTextField txtSOB;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtSpeciality;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtType;
    private javax.swing.JTextField txtVIN;
    private javax.swing.JTextField txtWebsiteURL;
    private javax.swing.JTextField txtYearofManufacture;
    // End of variables declaration//GEN-END:variables

    private void displayPatient()
    {
       txtPatientID.setText(patient.getPatientID());
       txtPrimaryDoctor.setText(patient.getPrimaryDoctor());
       txtPatientID1.setText(patient.getDateOfLastVisitToDoctor());
       txtDateOfNextAppointment.setText(patient.getDateOfNextAppointment());
       txtAllergies.setText(patient.getAllergies());
       
       System.out.println("Patient ID: " + patient.getPatientID());
       System.out.println("Primary Doctor: " + patient.getPrimaryDoctor());
       System.out.println("Date Of Last Visit To Doctor: " + patient.getDateOfLastVisitToDoctor());
       System.out.println("Date Of Next Appointment: " + patient.getDateOfNextAppointment());
       System.out.println("Allergies: " + patient.getAllergies());
    }
    
    private void displayDoctor()
    {
        
        txtName.setText(doctor.getName());
        txtDoctorID.setText(doctor.getDoctorID());
        txtEducation.setText(doctor.getEducation());
        txtOfficeAddress.setText(doctor.getOfficeAddress());
        txtOfficeHours.setText(doctor.getOfficeHours());
        txtSpeciality.setText(doctor.getSpeciality());
        txtInsuranceCovered.setText(doctor.getInsuranceCovered());
        
        System.out.println("Doctor Name: " + doctor.getName());
        System.out.println("Doctor ID: " + doctor.getDoctorID());
        System.out.println("Education: " + doctor.getEducation());
        System.out.println("Office Address: " + doctor.getOfficeAddress());
        System.out.println("Office Hours: " + doctor.getOfficeHours());
        System.out.println("Speciality: " + doctor.getSpeciality());
        System.out.println("Insurance Covered: " + doctor.getInsuranceCovered());
       
       

        
    }
    
        private void displayInsuranceDetails()
    {
        txtHealthInsuranceDetails.setText(insurance.getHealthInsuranceCompany());
        txtCorporateID.setText(insurance.getCorporateIDNumber());
        txtAddress.setText(insurance.getAddress());
        txtPremium.setText(insurance.getPremium());
        txtDeductible.setText(insurance.getDeductible());
        txtSOB.setText(insurance.getStatementOfBenefits());
        
        System.out.println("Health Insurance Company: " + insurance.getHealthInsuranceCompany());
        System.out.println("Corporate ID Number: " + insurance.getCorporateIDNumber());
        System.out.println("Address: " + insurance.getAddress());
        System.out.println("Premium: " + insurance.getPremium());
        System.out.println("Deductible: " + insurance.getDeductible());
        System.out.println("Statement of Benefits: " + insurance.getStatementOfBenefits());
    }
        private void displayPersonalDetails()
        {
         txtName1.setText(person.getName());
         txtNationality.setText(person.getNationality());
         txtEmailID.setText(person.getEmailid());
         txtAddress1.setText(person.getAddress());
         txtPhoneNo.setText(person.getPhonenumber());
         txtGender.setText(person.getGender());
         txtSSN.setText(person.getSsn());
         txtWebsiteURL.setText(person.getWebsiteURL());
         txtDOB.setText(person.getDateofbirth());
         
         System.out.println("Name: " + person.getName());
         System.out.println("Date of Birth: " + person.getDateofbirth());
         System.out.println("Nationality: " + person.getNationality());
         System.out.println("Address: " + person.getAddress());
         System.out.println("Phone Number: " + person.getPhonenumber());
         System.out.println("Gender: " + person.getGender());
         System.out.println("SSN: " + person.getSsn());
         System.out.println("Website URL: " + person.getWebsiteURL());
         
         
        }
        
        private void displayVehicleRegistrationDetails()
        {
            txtVIN.setText(vehicle.getVehicleIdentificationNumber());
            txtLicensePlateNumber.setText(vehicle.getLicensePlateNumber());
            txtMake.setText(vehicle.getVehicleMake());
            txtModel.setText(vehicle.getVehicleModel());
            txtType.setText(vehicle.getVehicleType());
            txtYearofManufacture.setText(vehicle.getYearOfManufacture());
            
            System.out.println("VIN: " + vehicle.getVehicleIdentificationNumber());
            System.out.println("License Plate Number: " + vehicle.getLicensePlateNumber());
            System.out.println("Vehicle Make: " + vehicle.getVehicleMake());
            System.out.println("Vehicle Model: " + vehicle.getVehicleModel());
            System.out.println("Vehicle Type: " + vehicle.getVehicleType());
            System.out.println("Year of Manufacture: " + vehicle.getYearOfManufacture());
            
        }
        private void displayAddressDetails()
        {
            txtCity.setText(address.getCity());
            txtState.setText(address.getState());
            txtCountry.setText(address.getCountry());
            
            System.out.println("City: " + address.getCity());
            System.out.println("State: " + address.getState());
            System.out.println("Country: " + address.getCountry());
        }
        
        private void displayDriverDetails()
        {
            txtDriverLicenseNumber.setText(driver.getDriverLicense());
            System.out.println("Driver License Number: " + driver.getDriverLicense());
        }
}
